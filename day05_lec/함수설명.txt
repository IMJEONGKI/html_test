수학적 함수 : input(O)  -->  output(O)

              y = x + 1

프로그램 함수 
  input(X)  -->  output(X)
  input(O)  -->  output(X)
  input(X)  -->  output(O)
  input(O)  -->  output(O)
                           definition
  parameter(매개변수) : 함수 정의시 외부로부터 값을 받는 부분
                        함수가 실행할 때 필요한 값
                         ㄴ 함수 외부에서 함수 내부로 값을 전달함                           
  return값(반환값)    : 함수의 실행이 종료될 때 호출한 곳으로 돌려주는 값
                          ㄴ 함수 내부에서 함수 외부로 값을 전달함

  호출(함수의 이름을 부름 : call(invoke(invacation))하면
                            함수가 실행됨 - 함수 body 의 code 가 실행됨

  parameter(매개변수)(X)  -->  return값(반환값)(X)
  parameter(매개변수)(O)  -->  return값(반환값)(X)
  parameter(매개변수)(X)  -->  return값(반환값)(O)
  parameter(매개변수)(O)  -->  return값(반환값)(O)


  함수 정의부( definition ) <-- 함수를 작성하는 것
                                함수가 작성된 부분의 code

  함수 정의부( definition ) = 함수의 선언부 + 함수의 body

  I
  선언적 함수
  function 함수이름(parameter){  <-- 선언부(declaration / signature)
          함수의 body(몸통, 구현부)
          return  :  모든 함수의 마지막에는 return 키워드가 있음
                     return 값이 없으면 생략할 수 있음
                     return 값이 있으면 생략할 수 없음
  }

  II
  익명 함수(이름 없는 함수) : anonymous(익명) function
  function (parameter){  <-- 선언부(declaration / signature)
          함수의 body(몸통, 구현부)
          return  :  모든 함수의 마지막에는 return 키워드가 있음
                     return 값이 없으면 생략할 수 있음
                     return 값이 있으면 생략할 수 없음
  }

	익명함수에 이름을 붙이는 방법
	  ㄴ 익명함수를 작성하고 변수에 할당함
		ㄴ  이 변수가 익명함수의 이름이 됨

  let funct1 = function (parameter){  <-- 선언부(declaration / signature)
												함수의 body(몸통, 구현부)
												return  :  모든 함수의 마지막에는 return 키워드가 있음
																	return 값이 없으면 생략할 수 있음
																	return 값이 있으면 생략할 수 없음
								}
                             argument - 인수, 인자, 인잣값
  호출부(함수의 이름을 부름) : 함수이름(argument)
  argument(인수, 인자, 인잣값) - 함수를 호출할 때 
                                 parameter 로 전달하는 써주는 부분
                                 parameter 가 없으면 argument 는 써주지 않음
